openapi: 3.0.1
info:
  title: Microservices API with JWT Authentication
  description: API documentation for microservices using JWT authentication.
  version: 1.0.0

servers:
  - url: http://localhost:8080
    description: Local development server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    AuthRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password

    AuthResponse:
      type: object
      properties:
        token:
          type: string

    ErrorResponse:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string

    Admin:
      type: object
      properties:
        id:
          type: string
          example: "1"
        name:
          type: string
          example: "John Doe"
        email:
          type: string
          format: email
          example: "john.doe@example.com"
        password:
          type: string
          example: "password123"
        mobile:
          type: string
          example: "+1234567890"

security:
  - bearerAuth: []

paths:
  /admin:
    post:
      summary: Add a new Admin
      operationId: addAdmin
      requestBody:
        description: Admin object that needs to be added to the system
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin'
      responses:
        '201':
          description: Admin created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Admin'
        '400':
          description: Bad Request - Invalid input
        '409':
          description: Conflict - Admin already exists

  /login:
    post:
      summary: Authenticates user and returns a JWT token.
      operationId: loginUser
      requestBody:
        description: User credentials
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequest'
      responses:
        '200':
          description: Successful authentication
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'