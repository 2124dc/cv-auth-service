openapi: 3.0.3
info:
  title: CV Auth Service API
  description: API for Authentication Service that provides login functionality and returns JWT tokens.
  version: 1.0.0
  contact:
    name: Support Team
    email: support@chavdarvishranti.com
servers:
  - url: http://localhost:8063
    description: Local server
  - url: http://103.168.18.176:8063
    description: Production server

paths:
  /auth/login:
    post:
      summary: Login and get JWT token
      description: Authenticate the user with username and password, and return a JWT token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequest'
      responses:
        '200':
          description: Successfully authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Unauthorized - invalid username or password
        '400':
          description: Bad request - invalid input format
        '500':
          description: Internal server error
  /auth/register:
    post:
      summary: Register a new user
      description: Register a new user with username, password, and email.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRegisterRequest'
            
      responses:
        '201':
          description: User registered successfully
        '400':
          description: Bad request - invalid input format
        '409':
          description: Conflict - user already exists
        '500':
          description: Internal server error
            
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    AuthRequest:
      type: object
      properties:
        username:
          type: string
          example: "sharad@example.com"
        password:
          type: string
          example: "password123"
      required:
        - username
        - password

    AuthResponse:
      type: object
      properties:
        token:
          type: string
          example: "eyJhbGciOiJIUzI1NiJ9..."
      required:
        - token

    AuthRegisterRequest:
      type: object
      properties:
        username:
          type: string
          example: "sharad@example.com"
        password:
          type: string
          example: "password123"
        name:
          type: string
          example: "sharad"
        mobile:
          type: string
          example: "0987654321"
        
      required:
        - username
        - password

security:
  - bearerAuth: []

tags:
  - name: Auth
    description: Authentication related endpoints